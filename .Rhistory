MS_due_to_feed <- SS_due_to_feed / 3
MS_due_to_feed
MSE <- SSE / 16
MSE
VR <- MS_due_to_feed / MSE
VR
chicks_data_aov <- aov(gain_in_weight ~ feed, data = chicks_data)
summary(chicks_data_aov)
VR > qf(0.05, 3, 16, lower.tail = FALSE)
qf(0.05, 3, 16, lower.tail = FALSE)
critical_difference <- qt(0.025, 16, lower.tail = FALSE) * sqrt((2 * MSE) / 5)
critical_difference
# a <- outer(df1$row_means, df1$row_means, FUN = "-")
# b <- unique(c(abs(a)))
# b
# c <- which(b > critical_difference)
# b[c]
mean_differences <- TukeyHSD(chicks_data_aov)$feed[,1]
mean_differences
imp <- which(mean_differences > critical_difference)
imp
mean_differences[imp]
our_data <- read.csv("D:\\data_sets\\doe_prac_q5_data.csv", stringsAsFactors = TRUE)
class(our_data)
View(our_data)
dim(our_data)
names(our_data)
summary(our_data)
library(tidyverse)
#normality test
our_data %>%
ggplot(aes(sample = yield)) +
stat_qq(size = 2, col = "red") +
stat_qq_line(linewidth = 1, col = "blue") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q Plot")
shapiro.test(our_data$yield)
our_data %>%
ggplot(aes(x = village, y = yield)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot(fill = "#DB2AF0", linewidth = 1) +
labs(x = "Villages", y = "Yield", title = "Boxplot of Yield vs Villages")
our_data %>%
ggplot(aes(x = treatment, y = yield)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot(fill = "#0CECAF", linewidth = 1) +
labs(x = "Treatment", y = "Yield", title = "Boxplot of Yield vs Treatments")
our_data_anova <- aov(yield ~ village + treatment, data = our_data)
summary(our_data_anova)
yield_adjusted <- (our_data$yield - 500) / 10
yield_adjusted
adjusted_data <- our_data
adjusted_data$yield_adjusted <- yield_adjusted
View(adjusted_data)
G <- sum(adjusted_data$yield_adjusted)
G
CF <- G^2 / length(adjusted_data$yield_adjusted)
CF
RSS <- sum(adjusted_data$yield_adjusted^2)
RSS
(RSS - CF)
TSS <- (RSS - CF) * 10^2
TSS
df1 <- adjusted_data %>%
group_by(village) %>%
summarise(row_total = sum(yield_adjusted), row_total_sq = row_total^2)
View(df1)
df2 <- adjusted_data %>%
group_by(treatment) %>%
summarise(column_total = sum(yield_adjusted), column_total_sq = column_total^2)
View(df2)
sum(df1$row_total_sq)
sum(df2$column_total_sq)
SSvillage <- (sum(df1$row_total_sq) / 4 - CF) * 10^2
SSvillage
SStreatments <- (sum(df2$column_total_sq) / 3 - CF) * 10^2
SStreatments
SSE <- TSS - SSvillage - SStreatments
SSE
MSvillage <- SSvillage / 2
MSvillage
MStreatments <- SStreatments / 3
MStreatments
MSE <- SSE / 6
MSE
MStreatments / MSE
summary(our_data_anova)
qf(0.05, 3, 6, lower.tail = FALSE)
critical_difference <- qt(0.025, 6, lower.tail = FALSE) * sqrt((2 * MSE)/3)
critical_difference
a <- TukeyHSD(our_data_anova)$treatment[,1]
a
TukeyHSD(our_data_anova)
chicks_data <- read.csv("D:\\data_sets\\doe_prac_q1_data.csv", stringsAsFactors = TRUE)
chicks_data_aov <- aov(gain_in_weight ~ feed, data = chicks_data)
summary(chicks_data_aov)
# a <- outer(df1$row_means, df1$row_means, FUN = "-")
# b <- unique(c(abs(a)))
# b
# c <- which(b > critical_difference)
# b[c]
mean_differences <- TukeyHSD(chicks_data_aov)$feed[,1]
mean_differences
TukeyHSD(chicks_data_aov, ordered = TRUE)
?TukeyHSD
a <- TukeyHSD(our_data_anova, ordered = TRUE)$treatment[,1]
a
df_temp <- our_data %>%
group_by(treatment) %>%
summarise(column_total = sum(yield), column_mean = mean(yield))
View(df)
View(df)
View(df_temp)
df_3 <- our_data %>%
group_by(treatment) %>%
summarise(column_total = sum(yield), column_mean = mean(yield))
View(df_3)
a <- TukeyHSD(our_data_anova, ordered = TRUE)$treatment[,1]
a
a <- TukeyHSD(our_data_anova)$treatment[,1]
a
critical_difference <- qt(0.025, 6, lower.tail = FALSE) * sqrt((2 * MSE)/3)
critical_difference
which(abs(a) > critical_difference)
our_data <- read.csv("D:\\data_sets\\doe_prac_q6_data.csv", stringsAsFactors = TRUE)
View(our_data)
dim(our_data)
names(our_data)
summary(our_data)
which(is.na(our_data))
na.rm(our_data)
library(tidyverse)
all_known_obs <- our_data %>%
drop_na()
all_known_obs
View(all_known_obs)
df1 <- all_known_obs %>%
group_by(block) %>%
summarise(row_total = sum(response))
View(df1)
df2 <- all_known_obs %>%
group_by(treatment) %>%
summarise(column_total = sum(response))
View(df2)
which(is.na(our_data$response))
summary(our_data)
x_hat <- (4 * df1$row_total[2] + 3 * df2$column_total[1] - sum(all_known_obs$response)) / (3 * 2)
x_hat
adjusted_data <- our_data
adjusted_data$response[which(is.na(adjusted_data$response))] = x_hat
View(adjusted_data)
G <- sum(adjusted_data$response)
G
CF <- G^2 / length(adjusted_data$response)
CF
RSS <- sum(adjusted_data$response^2)
RSS
TSS <- RSS - CF
TSS
df3 <- adjusted_data %>%
group_by(block) %>%
summarise(row_total = sum(response), row_total_sq = row_total^2)
View(df3)
df4 <- adjusted_data %>%
group_by(treatment) %>%
summarise(column_total = sum(response), column_total_sq = column_total^2)
View(df4)
sum(df3$row_total_sq)
SSblocks <- (sum(df3$row_total_sq) / 3) - CF
SSblocks
adjustment_factor <- (df1$row_total[2] + 3 * df2$column_total[1] - sum(all_known_obs))^2 / (3 * 2 * 3^2)
df1$row_total[2]
df2$column_total[1]
3 * df2$column_total[1]
df1$row_total[2] + 3 * df2$column_total[1]
df1$row_total[2] + 3 * df2$column_total[1] - sum(all_known_obs)
df1$row_total[2] + 3 * df2$column_total[1] - sum(all_known_obs)
adjustment_factor <- (df1$row_total[2] + 3 * df2$column_total[1] - sum(all_known_obs$response))^2 / (3 * 2 * 3^2)
adjustment_factor
sum(df4$column_total_sq)
SStreatments <- (sum(df4$column_total_sq) / 4) - CF
SStreatments
SStreatments_adjusted <- SStreatments - adjustment_factor
SStreatments_adjusted
SSE <- TSS - SStreatments_adjusted - SSblocks
SSE
MSblocks <- SSblocks / 3
MSblocks
MStreatments_adjusted <- SStreatments_adjusted / 2
MStreatments_adjusted
MSE <- SSE / 5
MSE
MStreatments_adjusted / MSE
qf(0.05, 2, 5, lower.tail = FALSE)
our_data <- read.csv("D:\\data_sets\\doe_prac_q6_data.csv", stringsAsFactors = TRUE)
View(our_data)
dim(our_data)
names(our_data)
summary(our_data)
which(is.na(our_data$response))
library(tidyverse)
all_known_obs <- our_data %>%
drop_na()
View(all_known_obs)
df1 <- all_known_obs %>%
group_by(block) %>%
summarise(row_total = sum(response))
View(df1)
df2 <- all_known_obs %>%
group_by(treatment) %>%
summarise(column_total = sum(response))
View(df2)
sum(all_known_obs$response)
df1$row_total[2]
df2$column_total[1]
x_hat <- (4 * df1$row_total[2] + 3 * df2$column_total[1] - sum(all_known_obs$response)) / (3 * 2)
x_hat
adjusted_data <- our_data
adjusted_data$response[which(is.na(adjusted_data$response))] = x_hat
View(adjusted_data)
G <- sum(adjusted_data$response)
G
CF <- G^2 / length(adjusted_data$response)
CF
RSS <- sum(adjusted_data$response^2)
RSS
TSS <- RSS - CF
TSS
df3 <- adjusted_data %>%
group_by(block) %>%
summarise(row_total = sum(response), row_total_sq = row_total^2)
View(df3)
df4 <- adjusted_data %>%
group_by(treatment) %>%
summarise(column_total = sum(response), column_total_sq = column_total^2)
View(df4)
sum(df3$row_total_sq)
sum(df4$column_total_sq)
SSblocks <- (sum(df3$row_total_sq) / 3) - CF
SSblocks
SStreatments <- (sum(df4$column_total_sq) / 4) - CF
SStreatments
adjustment_factor <- (df1$row_total[2] + 3 * df2$column_total[1] - sum(all_known_obs$response))^2 / (3 * 2 * 3^2)
adjustment_factor
SStreatments_adjusted <- SStreatments - adjustment_factor
SStreatments_adjusted
SSE <- TSS - SStreatments - SSblocks
SSE
SSE <- TSS - SStreatments_adjusted - SSblocks
SSE
SSE <- TSS - SStreatments - SSblocks
SSE
MSblocks <- SSblocks / 3
MSblocks
MStreatments_adjusted <- SStreatments_adjusted / 2
MStreatments_adjusted
MSE <- SSE / 5
MSE
MStreatments_adjusted / MSE
qf(0.05, 2, 5, lower.tail = FALSE)
critical_differene <- qt(0.025, 5, lower.tail = FALSE) * sqrt( MSE * ( 2/4 + 3/(4 * 3 * 2) ) )
our_data <- read.csv("D:\\data_sets\\doe_prac_q6_data.csv", stringsAsFactors = TRUE)
View(our_data)
dim(our_data)
names(our_data)
summary(our_data)
which(is.na(our_data$response))
library(tidyverse)
all_known_obs <- our_data %>%
drop_na()
View(all_known_obs)
df1 <- all_known_obs %>%
group_by(block) %>%
summarise(row_total = sum(response))
View(df1)
df2 <- all_known_obs %>%
group_by(treatment) %>%
summarise(column_total = sum(response))
View(df2)
sum(all_known_obs$response)
x_hat <- (4 * df1$row_total[2] + 3 * df2$column_total[1] - sum(all_known_obs$response)) / (3 * 2)
x_hat
adjusted_data <- our_data
adjusted_data$response[which(is.na(adjusted_data$response))] = x_hat
View(adjusted_data)
G <- sum(adjusted_data$response)
G
CF <- G^2 / length(adjusted_data$response)
CF
RSS <- sum(adjusted_data$response^2)
RSS
TSS <- RSS - CF
TSS
df3 <- adjusted_data %>%
group_by(block) %>%
summarise(row_total = sum(response), row_total_sq = row_total^2)
View(df3)
df4 <- adjusted_data %>%
group_by(treatment) %>%
summarise(column_total = sum(response), column_total_sq = column_total^2)
View(df4)
sum(df3$row_total_sq)
sum(df4$column_total_sq)
SSblocks <- (sum(df3$row_total_sq) / 3) - CF
SSblocks
SStreatments <- (sum(df4$column_total_sq) / 4) - CF
SStreatments
adjustment_factor <- (df1$row_total[2] + 3 * df2$column_total[1] - sum(all_known_obs$response))^2 / (3 * 2 * 3^2)
adjustment_factor
SStreatments_adjusted <- SStreatments - adjustment_factor
SStreatments_adjusted
SSE <- TSS - SStreatments - SSblocks
SSE
MSblocks <- SSblocks / 3
MSblocks
MStreatments_adjusted <- SStreatments_adjusted / 2
MStreatments_adjusted
MSE <- SSE / 5
MSE
MStreatments_adjusted / MSE
qf(0.05, 2, 5, lower.tail = FALSE)
critical_differene <- qt(0.025, 5, lower.tail = FALSE) * sqrt( MSE * ( 2/4 + 3/(4 * 3 * 2) ) )
critical_differene
T_1_T_2_mean_difference <- df4$column_total[1] - df4$column_total[2]
T_1_T_2_mean_difference
92.133-114
T_1_T_2_total_difference <- df4$column_total[1] - df4$column_total[2]
T_1_T_2_mean_difference <- T_1_T_2_total_difference / 4
T_1_T_2_mean_difference
abs(T_1_T_2_mean_difference) > critical_differene
critical_differene
T_1_T_2_total_difference <- df4$column_total[1] - df4$column_total[2]
T_1_T_2_mean_difference <- T_1_T_2_total_difference / 4
T_1_T_2_mean_difference
abs(T_1_T_2_mean_difference) > critical_differene
wdbc_data <- read.csv("D:\\Users\\Documents\\sem_6_project\\wisconsin_diagnostic_breast_cancer_data.csv")
View(wdbc_data)
dim(wdbc_data)
head(wdbc_data)
tail(wdbc_data)
summary(wdbc_data)
for (i in 1:length(wdbc_data$diagnosis)) {
if(wdbc_data$diagnosis[i] == "M") {
wdbc_data$diagnosis[i] = "Malignant"
}
else {
wdbc_data$diagnosis[i] = "Benign"
}
}
write.csv(wdbc_data, "D:\\Users\\Documents\\sem_6_project\\wisconsin_diagnostic_breast_cancer_data_new.csv", row.names = FALSE)
wdbc_data <- read.csv("D:\\Users\\Documents\\sem_6_project\\wisconsin_diagnostic_breast_cancer_data_new.csv")
library(tidyverse)
library(ggthemes)
wdbc_data %>%
ggplot(aes(x = diagnosis, fill = diagnosis)) +
geom_bar(width = 0.5) +
scale_fill_manual(values = c("#03CD00", "#EA1212")) +
theme_economist() +
labs(x = "Diagnosis", y = "", title = "Barplot")
wdbc_data %>%
ggplot(aes(x = diagnosis, fill = diagnosis)) +
geom_bar(width = 0.5) +
scale_fill_manual(values = c("#03CD00", "#EA1212")) +
theme_stata()
df1 <- data.frame(Diagnosis = c("Benign", "Malignant"), Count = c(357, 212))
df1
hole_size <- 1.8
df1 %>%
ggplot(aes(x = hole_size, y = Count, fill = Diagnosis)) +
geom_col() +
coord_polar(theta = "y") +
xlim(c(0.05, hole_size + 0.5)) +
scale_fill_manual(values = c("#19F515", "#F13A31")) +
theme_void() +
theme(legend.position = c(.85, .9))
df1 %>%
ggplot(aes(x = hole_size, y = Count, fill = Diagnosis)) +
geom_col() +
coord_polar(theta = "y") +
xlim(c(0.05, hole_size + 0.5)) +
scale_fill_manual(values = c("#19F515", "#F13A31")) +
theme_economist() +
theme(legend.position = c(.85, .9))
df1 %>%
ggplot(aes(x = hole_size, y = Count, fill = Diagnosis)) +
geom_col() +
coord_polar(theta = "y") +
xlim(c(0.05, hole_size + 0.5)) +
scale_fill_manual(values = c("#19F515", "#F13A31")) +
theme_void() +
theme(legend.position = c(.85, .9)) +
theme(panel.background = element_rect(fill = "lightblue"))
df1 %>%
ggplot(aes(x = hole_size, y = Count, fill = Diagnosis)) +
geom_col() +
coord_polar(theta = "y") +
xlim(c(0.05, hole_size + 0.5)) +
scale_fill_manual(values = c("#19F515", "#F13A31")) +
theme_void() +
theme(legend.position = c(.85, .9)) +
theme(panel.background = element_rect(fill = "#F06962"))
df1 %>%
ggplot(aes(x = hole_size, y = Count, fill = Diagnosis)) +
geom_col() +
coord_polar(theta = "y") +
xlim(c(0.05, hole_size + 0.5)) +
scale_fill_manual(values = c("#19F515", "#F13A31")) +
theme_void() +
theme(legend.position = c(.85, .9)) +
theme(panel.background = element_rect(fill = "pink"))
lightblue
df1 %>%
ggplot(aes(x = hole_size, y = Count, fill = Diagnosis)) +
geom_col() +
coord_polar(theta = "y") +
xlim(c(0.05, hole_size + 0.5)) +
scale_fill_manual(values = c("#19F515", "#F13A31")) +
theme_void() +
theme(legend.position = c(.85, .9)) +
theme(panel.background = element_rect(fill = "lightblue"))
df1 %>%
ggplot(aes(x = hole_size, y = Count, fill = Diagnosis)) +
geom_col() +
coord_polar(theta = "y") +
xlim(c(0.05, hole_size + 0.5)) +
scale_fill_manual(values = c("#28ED0C", "#F13A31")) +
theme_void() +
theme(legend.position = c(.85, .9)) +
theme(panel.background = element_rect(fill = "lightblue"))
df1 %>%
ggplot(aes(x = hole_size, y = Count, fill = Diagnosis)) +
geom_col() +
coord_polar(theta = "y") +
xlim(c(0.05, hole_size + 0.5)) +
scale_fill_manual(values = c("#28ED0C", "#F13A31")) +
theme_void() +
theme(legend.position = c(.85, .9)) +
theme(panel.background = element_rect(fill = "lightblue", colour = "red"))
wheat_data <- read.csv("D:\\data_sets\\doe_prac_q7_data.csv", stringsAsFactors = TRUE)
View(wheat_data)
dim(wheat_data)
names(wheat_data)
summary(wheat_data)
which(is.na(wheat_data$yield))
a <- which(wheat_data$row == "R3")
a
R <- sum(wheat_data$yield[a])
R
R <- sum(wheat_data$yield[a], na.rm = TRUE)
R
b <- which(wheat_data$column == "C4")
b
C <- sum(wheat_data$yield[b], na.rm = TRUE)
C
c <- which(wheat_data$treatment == "E")
c
T1 <- sum(wheat_data$yield[c], na.rm = TRUE)
T1
S <- sum(wheat_data$yield, na.rm = TRUE)
S
m <- 5
x_hat <- (m * (R + C + T1) - 2 * S) / ((m - 1) * (m-2))
x_hat
adjusted_wheat_data <- wheat_data
which(is.na(wheat_data$yield))
adjusted_wheat_data$yield[14] = x_hat
View(adjusted_wheat_data)
G <- sum(adjusted_wheat_data$yield)
G
CF <- G^2 / 25
CF
RSS <- sum(adjusted_wheat_data$yield^2)
RSS
TSS <- RSS - CF
TSS
library(tidyverse)
df1 <- adjusted_wheat_data %>%
group_by(row) %>%
summarise(row_total = sum(yield), row_total_sq = row_total^2)
View(df1)
df2 <- adjusted_wheat_data %>%
group_by(column) %>%
summarise(column_total = sum(yield), column_total_sq = column_total^2)
View(df2)
df3 <- adjusted_wheat_data %>%
group_by(treatment) %>%
summarise(treatment_total = sum(yield), treatment_total_sq = treatment_total^2)
View(df3)
sum(df1$row_total_sq)
sum(df2$column_total_sq)
sum(df3$treatment_total_sq)
SSrow <- sum(df1$row_total_sq) / 5 - CF
SSrow
SScolumn <- sum(df2$column_total_sq) / 5 - CF
SScolumn
SStreatments <- sum(df3$treatment_total_sq) / 5 - CF
SStreatments
adjustment_factor <- ( ((m - 1) * T1 + R + C - S) / ((m - 1) * (m - 2)) )^2
adjustment_factor
SStreatments_adjusted <- SStreatments - adjustment_factor
SStreatments_adjusted
SSE_adjusted <- TSS - SSrow - SScolumn - SStreatments_adjusted
SSE_adjusted
MSrow <- SSrow / 4
MSrow
MScolumn <- SScolumn / 4
MScolumn
MStreatments_adjusted <- SStreatments_adjusted / 4
MStreatments_adjusted
MSE_adjusted <- SSE_adjusted / 11
MSE_adjusted
MStreatments_adjusted / MSE_adjusted
qf(0.05, 4, 11, lower.tail = FALSE)
