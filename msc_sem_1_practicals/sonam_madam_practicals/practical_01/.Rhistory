# mean
my_mean_function <- function(x){
sample_sum <- 0
for (i in 1:length(x)) {
sample_sum <- sample_sum + x[i]
}
return(sample_sum / length(x))
}
# selection sort
my_selection_sort <- function(x){
for (i in 1:(length(x)-1)) {
for (j in (i+1):length(x)) {
if(x[i] > x[j]){
x[c(i, j)] <- x[c(j, i)]
}
}
}
return(x)
}
# median
my_median_function <- function(x){
x <- my_selection_sort(x)
if(length(x) %% 2 == 0){
return((x[length(x)/2] + x[length(x)/2 + 1]) / 2)
}
else{
return(x[(length(x) + 1) / 2])
}
}
# sample central moments
my_sample_central_moments_function <- function(x, r){
temp <- 0
for (i in 1:length(x)) {
temp <- temp + (x[i] - my_mean_function(x))^r
}
return(temp / (length(x) - 1))
}
our_data <- read.csv('https://raw.githubusercontent.com/sakunisgithub/data_sets/master/msc_semester_1/sonam_madam_practical_02_data.csv')
dim(our_data)
source('https://raw.githubusercontent.com/sakunisgithub/R-programming/master/my_implementations.R')
github_path <- 'https://raw.githubusercontent.com/sakunisgithub/data_sets/master/msc_semester_1/sonam_madam_practical_02_data.csv'
our_data <- read.csv(github_path)
my_covariance_function <- function(x, y){
x_bar <- my_mean_function(x)
y_bar <- my_mean_function(y)
temp <- 0
for (i in 1:length(x)) {
temp <- temp + (x[i] - x_bar) * (y[i] - y_bar)
}
return(temp/(length(x) - 1))
}
my_correlation_function <- function(x, y){
var_x <- my_sample_central_moments_function(x, 2)
var_y <- my_sample_central_moments_function(y, 2)
cor_xy <- my_covariance_function(x, y) / sqrt(x * y)
return(cor_xy)
}
my_correlation_function(our_data$X, our_data$Y)
cor(our_data$X, our_data$Y, method = "pearson")
my_covariance_function(our_data$X, our_data$Y)
cov(our_data$X, our_data$Y)
my_correlation_function <- function(x, y){
var_x <- my_sample_central_moments_function(x, 2)
var_y <- my_sample_central_moments_function(y, 2)
cor_xy <- my_covariance_function(x, y) / sqrt(var_x * var_y)
return(cor_xy)
}
my_correlation_function(our_data$X, our_data$Y)
cor(our_data$X, our_data$Y, method = "pearson")
